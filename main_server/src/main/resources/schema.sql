CREATE TABLE IF NOT EXISTS users
(
  id     BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name   VARCHAR(255) NOT NULL,
  email  VARCHAR(64) NOT NULL,
  CONSTRAINT UNIQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  CONSTRAINT UNIQ_CATEGORY_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events
(
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  published_on TIMESTAMP WITHOUT TIME ZONE,
  event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  state VARCHAR(64) NOT NULL,
  title VARCHAR(255) NOT NULL,
  description TEXT NOT NULL,
  annotation TEXT,
  participant_limit INTEGER NOT NULL CONSTRAINT positive_participant_limit CHECK (participant_limit >= 0),
  confirmed_requests INTEGER NOT NULL,
  longitude FLOAT NOT NULL,
  latitude FLOAT NOT NULL,
  paid BOOL NOT NULL,
  request_moderation BOOL NOT NULL,
  initiator_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  category_id BIGINT NOT NULL REFERENCES categories(id),

  CHECK (confirmed_requests <= participant_limit)
);

CREATE TABLE IF NOT EXISTS requests
(
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  status VARCHAR(64) NOT NULL,
  event_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  requester_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  CONSTRAINT UNIQ_REQUEST_PER_EVENT UNIQUE (event_id, requester_id)
);

CREATE TABLE IF NOT EXISTS compilations
(
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  pinned BOOL NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events_link
(
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  compilation_id BIGINT NOT NULL REFERENCES compilations(id) ON DELETE CASCADE,
  event_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  CONSTRAINT UNIQ_COMPILATION_EVENT_PAIR UNIQUE (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS comments
(
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  user_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
  event_id BIGINT NOT NULL REFERENCES events(id) ON DELETE CASCADE,
  created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  edited_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  text TEXT NOT NULL
);
